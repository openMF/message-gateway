buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.0.RELEASE'
   // id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id 'eclipse'
    id "com.github.hierynomus.license" version "0.15.0"
    id 'war'
}

if (project.hasProperty('profile') && project.getProperty('profile') == 'deployable') {
    apply from: 'profile-deployable.gradle'
} else {
    apply from: 'profile-standalone.gradle'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

group 'org.fineract'
version '0.0.1'
sourceCompatibility=11
targetCompatibility=11
assert System.properties["java.specification.version"] == "1.8" || "1.9" || "10" || "11"

license {
    header rootProject.file('./LICENSE.md')
    excludes(["**/*.html", "**/*.yml", "**/*.mustache", "**/package-info.java", "**/keystore.jks"])
    strictCheck true
}

task licenseFormatBuildScripts (type:nl.javadude.gradle.plugins.license.License) {
    source = fileTree(dir: './', includes: ['**/*.bat', '**/*.sh', '**/*.sql'])
}
licenseFormat.dependsOn licenseFormatBuildScripts


dependencies {

    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation "org.flywaydb:flyway-core:${flywayCoreBootVersion}"
    implementation "org.apache.velocity:velocity:${apacheVelocityVersion}"
    implementation "com.squareup.okhttp:okhttp:${squareupOkhttpVersion}"
    implementation "com.squareup.okhttp:okhttp-urlconnection:${squareupOkhttpUrlConnectionVersion}"
    implementation "com.squareup.retrofit:retrofit:${squareupRetrofitVersion}"
    implementation "com.twilio.sdk:twilio:${twilioSdkVersion}"
    implementation "org.drizzle.jdbc:drizzle-jdbc:${drizzleJdbcVersion}"
    implementation "com.google.code.gson:gson:${googleCodeGsonVersion}"
    implementation ("com.infobip:infobip-api-java-client:${infobipApiJavaClientVersion}") {
        exclude group: 'com.google.code.gson', module: 'gson'
    }
}

bootJar {
    mainClassName = "org.fineract.messagegateway.MessageGateway"
}

test {
    useJUnitPlatform()
}
wrapper {
    gradleVersion = '6.6.1'
}
